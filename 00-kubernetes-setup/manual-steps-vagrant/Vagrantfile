# ============================================================================================
# 
# Activities to do:
# 
# File for start/stop/resume a controlplane node by using vagrant.
# File for start/stop/resume a two workers nodes by using vagrant.
# 
# by juanmercadoit.com
#
# ============================================================================================

# Variables for the cluster.
# Variables for the cluster.

IMAGE_NAME = "bento/ubuntu-20.04"
CLUSTER_NAME = "controlplane"
ENV['VAGRANT_NO_PARALLEL'] = 'yes'
# The "2" in the first line above represents the version of the configuration object config that will be used for configuration for that block (the section between the do and the end). 
# This object can be very different from version to version.
Vagrant.configure("2") do |config|
  (1..1).each do |i|
    config.vm.define "#{CLUSTER_NAME}-0#{i}" do |node|
      node.vm.box               = IMAGE_NAME
      node.vm.box_check_update  = false
      node.vm.hostname          = "#{CLUSTER_NAME}-0#{i}.kubernetes.cluster"
      node.vm.network "private_network", ip: "192.168.60.11", name: "vboxnet4"
      node.vm.provider :virtualbox do |v|
        v.name    = "#{CLUSTER_NAME}-0#{i}"
        v.memory  = 1024
        v.cpus    = 2
      end
      node.vm.provider :libvirt do |v|
        v.memory  = 1024
        v.nested  = true
        v.cpus    = 2
      end
      node.vm.provision "shell", path: "01-bootstrap.sh", args: "#{CLUSTER_NAME}"
    end
  end
  (1..1).each do |i|
    config.vm.define "worker-0#{i}" do |node|
      node.vm.box               = IMAGE_NAME
      node.vm.box_check_update  = false
      node.vm.hostname          = "worker-0#{i}.kubernetes.cluster"
      node.vm.network "private_network", ip: "192.168.60.2#{i}"
        node.vm.provider :virtualbox do |v|
          v.name    = "worker-0#{i}"
          v.memory  = 1024
          v.cpus    = 2
        end
        node.vm.provider :libvirt do |v|
          v.memory  = 1024
          v.nested  = true
          v.cpus    = 2
        node.vm.provision "shell", path: "01-bootstrap.sh", args: "worker"
        end
    end
  end
  (2..2).each do |i|
    config.vm.define "worker-0#{i}" do |node|
      node.vm.box               = IMAGE_NAME
      node.vm.box_check_update  = false
      node.vm.hostname          = "worker-0#{i}.kubernetes.cluster"
      node.vm.network "private_network", ip: "192.168.60.2#{i}"
        node.vm.provider :virtualbox do |v|
          v.name    = "worker-0#{i}"
          v.memory  = 1024
          v.cpus    = 2
        end
        node.vm.provider :libvirt do |v|
          v.memory  = 1024
          v.nested  = true
          v.cpus    = 2
        node.vm.provision "shell", path: "01-bootstrap.sh", args: "worker"
        end
    end
  end
  (3..3).each do |i|
    config.vm.define "worker-0#{i}" do |node|
      node.vm.box               = IMAGE_NAME
      node.vm.box_check_update  = false
      node.vm.hostname          = "worker-0#{i}.kubernetes.cluster"
      node.vm.network "private_network", ip: "192.168.60.2#{i}"
        node.vm.provider :virtualbox do |v|
          v.name    = "worker-0#{i}"
          v.memory  = 2048
          v.cpus    = 2
        end
        node.vm.provider :libvirt do |v|
          v.memory  = 2048
          v.nested  = true
          v.cpus    = 2
        node.vm.provision "shell", path: "01-bootstrap.sh", args: "worker"
        end
    end
  end
  (4..4).each do |i|
    config.vm.define "worker-0#{i}" do |node|
      node.vm.box               = IMAGE_NAME
      node.vm.box_check_update  = false
      node.vm.hostname          = "worker-0#{i}.kubernetes.cluster"
      node.vm.network "private_network", ip: "192.168.60.2#{i}"
        node.vm.provider :virtualbox do |v|
          v.name    = "worker-0#{i}"
          v.memory  = 2048
          v.cpus    = 2
        end
        node.vm.provider :libvirt do |v|
          v.memory  = 2048
          v.nested  = true
          v.cpus    = 2
        node.vm.provision "shell", path: "01-bootstrap.sh", args: "worker"
        end
    end
  end
end
